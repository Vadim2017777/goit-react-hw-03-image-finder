{"version":3,"sources":["componets/helpers/constants.js","componets/Searchbar/Searchbar.js","componets/ImageGalleryItem/ImageGalleryItem.js","componets/ImageGallery/ImageGallery.js","componets/Loader/Loader.js","componets/Button/Button.js","componets/Modal/Modal.js","services/articlesAPI.js","componets/App.js","index.js"],"names":["INITIAL_STATE_SEARCHBAR","articles","loading","error","query","page","showModal","largeImageURL","INITIAL_STATE_GALLERY","Searchbar","state","handleInputChange","target","setState","value","handleSubmit","e","preventDefault","onSubmit","props","reset","this","className","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","webformatURL","tags","openModal","onClick","src","alt","data-name","ImageGallery","data","map","id","key","App","color","height","width","Button","Modal","handleClick","event","currentTarget","closeModal","handleKeyDown","code","window","addEventListener","removeEventListener","imgUrl","searchQuery","axios","get","then","response","hits","fetchArticles","articlesApi","prevState","catch","finally","handleSearchFormSubmit","name","dataset","prevProps","prevQuery","nextQuery","prevPage","nextPage","scrollTo","top","document","documentElement","scrollHeight","behavior","message","length","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.fedb3f26.chunk.js","sourcesContent":["const INITIAL_STATE_SEARCHBAR = {\r\n  articles: [],\r\n  loading: false,\r\n  error: null,\r\n  query: '',\r\n  page: 1,\r\n  showModal: false,\r\n  largeImageURL: '',\r\n};\r\n\r\nconst INITIAL_STATE_GALLERY = {\r\n  query: '',\r\n};\r\n\r\nexport { INITIAL_STATE_SEARCHBAR, INITIAL_STATE_GALLERY };\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { INITIAL_STATE_GALLERY } from '../helpers/constants';\r\n\r\nimport './Searchbar.css';\r\n\r\nexport default class Searchbar extends Component {\r\n  state = {\r\n    ...INITIAL_STATE_GALLERY,\r\n  };\r\n\r\n  handleInputChange = ({ target }) => {\r\n    this.setState({ query: target.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { onSubmit } = this.props;\r\n    const { query } = this.state;\r\n    onSubmit(query);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ ...INITIAL_STATE_GALLERY });\r\n  };\r\n\r\n  render() {\r\n    const { query } = this.state;\r\n\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={query}\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './imageGalleryItem.css';\r\n\r\nconst ImageGalleryItem = ({ webformatURL, tags, openModal, largeImageURL }) => (\r\n  <li className=\"ImageGalleryItem\" onClick={openModal}>\r\n    <img\r\n      src={webformatURL}\r\n      alt={tags}\r\n      data-name={largeImageURL}\r\n      className=\"ImageGalleryItem-image\"\r\n    />\r\n  </li>\r\n);\r\n\r\nexport default ImageGalleryItem;\r\n\r\nImageGalleryItem.propTypes = {\r\n  tags: PropTypes.string.isRequired,\r\n  webformatURL: PropTypes.string.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n  openModal: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\n\r\nimport './ImageGallery.css';\r\n\r\nconst ImageGallery = ({ data, openModal }) => (\r\n  <ul className=\"ImageGallery\">\r\n    {data.map(({ id, webformatURL, tags, largeImageURL }) => (\r\n      <ImageGalleryItem\r\n        key={id}\r\n        webformatURL={webformatURL}\r\n        tags={tags}\r\n        openModal={openModal}\r\n        largeImageURL={largeImageURL}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default ImageGallery;\r\n\r\nImageGallery.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  openModal: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nimport Loader from 'react-loader-spinner';\r\nexport default class App extends Component {\r\n  render() {\r\n    return <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={100} width={100} />;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Button.css';\r\n\r\nconst Button = ({ onClick }) => (\r\n  <button type=\"button\" className=\"Button\" onClick={onClick}>\r\n    Load more\r\n  </button>\r\n);\r\n\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Modal.css';\r\n\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.closeModal();\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape' || e.target) {\r\n      this.props.closeModal();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Overlay\" onClick={this.handleClick}>\r\n        <div className=\"Modal\">\r\n          <img src={this.props.imgUrl} alt=\"\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  imgUrl: PropTypes.string.isRequired,\r\n  closeModal: PropTypes.func.isRequired,\r\n};\r\n","import axios from 'axios';\r\n\r\nconst fetchArticlesWithQuery = (searchQuery, page = 1) => {\r\n  return axios\r\n    .get(\r\n      `https://pixabay.com/api/?image_type=photo&orientation=horizontal&q=${searchQuery}&page=${page}&per_page=12&key=16237149-31f8128048fb3bf9af47cfac8`,\r\n    )\r\n    .then(response => response.data.hits);\r\n};\r\n\r\nexport default {\r\n  fetchArticlesWithQuery,\r\n};\r\n","import React, { Component } from 'react';\r\n\r\nimport Searchbar from './Searchbar/Searchbar';\r\nimport ImageGallery from '../componets/ImageGallery/ImageGallery';\r\nimport Loader from './Loader/Loader';\r\nimport Button from './Button/Button';\r\nimport Modal from './Modal/Modal';\r\n\r\nimport articlesApi from '../services/articlesAPI';\r\nimport { INITIAL_STATE_SEARCHBAR } from './helpers/constants';\r\n\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    ...INITIAL_STATE_SEARCHBAR,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { query, page } = this.state;\r\n    const prevQuery = prevState.query;\r\n    const nextQuery = query;\r\n    const prevPage = prevState.page;\r\n    const nextPage = page;\r\n    if (prevQuery !== nextQuery) {\r\n      this.fetchArticles();\r\n    }\r\n\r\n    if (nextPage !== prevPage) {\r\n      window.scrollTo({\r\n        top: document.documentElement.scrollHeight,\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n  }\r\n\r\n  fetchArticles = () => {\r\n    const { query, page } = this.state;\r\n    this.setState({ loading: true });\r\n\r\n    articlesApi\r\n      .fetchArticlesWithQuery(query, page)\r\n      .then(articles =>\r\n        this.setState(prevState => ({\r\n          articles: [...prevState.articles, ...articles],\r\n          page: prevState.page + 1,\r\n        })),\r\n      )\r\n      .catch(error => this.setState({ error }))\r\n      .finally(() => this.setState({ loading: false }));\r\n  };\r\n\r\n  handleSearchFormSubmit = query => {\r\n    this.setState({ query, page: 1, articles: [] });\r\n  };\r\n\r\n  openModal = e => {\r\n    const { name } = e.target.dataset;\r\n\r\n    this.setState(state => ({\r\n      showModal: !state.showModal,\r\n      largeImageURL: name,\r\n    }));\r\n  };\r\n\r\n  closeModal = e => {\r\n    this.setState(state => ({\r\n      showModal: !state.showModal,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { articles, loading, error, showModal, largeImageURL } = this.state;\r\n    return (\r\n      <>\r\n        {error && <p>Somthing went wrong:{error.message}</p>}\r\n        <Searchbar onSubmit={this.handleSearchFormSubmit} />\r\n        {articles.length > 0 && (\r\n          <ImageGallery data={articles} openModal={this.openModal} />\r\n        )}\r\n        {loading && <Loader />}\r\n        {articles.length > 0 && !loading && (\r\n          <Button onClick={this.fetchArticles} />\r\n        )}\r\n        {showModal && (\r\n          <Modal imgUrl={largeImageURL} closeModal={this.closeModal} />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './componets/App';\r\n\r\nimport './componets/App';\r\n\r\nimport './base.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}